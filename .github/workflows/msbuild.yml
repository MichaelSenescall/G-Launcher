name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: D:\a\G-Launcher\G-Launcher\x64\Release\G-Launcher.exe

    #- name: Release
     # uses: fnkr/github-action-ghr@v1
      #if: startsWith(github.ref, 'refs/tags/')
      #env:
        #GHR_COMPRESS: xz
        #GHR_PATH: G-Launcher/x64/Release/G-Launcher.exe
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  upload:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/download-artifact@v2
        with:
          name: my-artifact

      - name: Display structure of downloaded files
        run: ls -R
      
      - uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{secrets.AWS_KEY_ID}}
          aws_secret_access_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{secrets.AWS_BUCKET}}
          source_dir: G-Launcher.exe
